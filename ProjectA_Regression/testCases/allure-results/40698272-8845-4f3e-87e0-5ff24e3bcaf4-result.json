{"name": "test_run_fleet_home_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <ProjectA_Regression.testCases.test_Suite_Controller.TestSuiteController object at 0x7d20f4ba4680>\n\n    @pytest.mark.order(5)\n    def test_run_fleet_home_page(self):\n        log = self.getLogger()\n        log.info(\"===== Suite Controller: Fleet Home Page =====\")\n    \n        home = Fleet_HomePage_Test()\n        home.driver = self.driver\n        home.test_validate_select_date_range()\n        home.test_validate_trips_card_present()\n        home.test_validate_distance_card()\n        home.test_validate_event_per_100_miles_card()\n        home.test_home_page_duration()\n>       home.test_home_page_recommended_events()   # Data related\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_Suite_Controller.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_F_1_HomePage.py:77: in test_home_page_recommended_events\n    assert fleet.validate_recommended_for_coaching(log), \"Recommended for Coaching card not displayed\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../pageObjects/F_1_HomePage.py:131: in validate_recommended_for_coaching\n    WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"681a4e42882252bda863512177e7b278\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x7d20f4a13920>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException"}, "attachments": [{"name": "log", "source": "a7bcf0c6-5c19-4a07-bd9c-7a2ceef05265-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "69d1f121-f7ba-4787-9f8f-e33665b434d6-attachment.txt", "type": "text/plain"}], "start": 1753860169793, "stop": 1753860196939, "uuid": "faf1ad1e-f4d5-4f9a-a782-2207d89b5c72", "historyId": "699995675b7c4069ec7be3d50e80fbb4", "testCaseId": "699995675b7c4069ec7be3d50e80fbb4", "fullName": "test_Suite_Controller.TestSuiteController#test_run_fleet_home_page", "labels": [{"name": "tag", "value": "order(5)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "suite", "value": "test_Suite_Controller"}, {"name": "subSuite", "value": "TestSuiteController"}, {"name": "host", "value": "user-ThinkPad-E14-Gen-4"}, {"name": "thread", "value": "18498-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Suite_Controller"}]}